%fieldset.choices
	:javascript
		$('#edit_pricelist_#{f.object.id} .choices').on('focus', '.autocomplete', function(event){
			if ($(this).autocomplete('widget').attr('id')) {
				$(this).autocomplete({
					source: #{Filling.where(:model => 'Choice', :field => 'title').map(&:text)}
				});
			};
		});
	
	%legend= t('views.pricelist.menu')
	%br
	= f.fields_for :choices do |ff|
		.well
			= ff.link_to_remove :class => 'btn btn-danger btn-small pull-right' do
				%i.icon-minus.icon-white
			= ff.fields_for :title_translations do |fff|
				.control-group
					= fff.label :en, (t('models.title') + ' (En)'), :class => 'control-label'
					.controls
						= fff.text_field :en, :class => 'span9 autocomplete', :value => (ff.object.title_translations['en'] unless ff.object.title.blank?)
				.control-group
					= fff.label :ru, (t('models.title') + ' (Ru)'), :class => 'control-label'
					.controls
						= fff.text_field :ru, :class => 'span9 autocomplete', :value => (ff.object.title_translations['ru'] unless ff.object.title.blank?)
			.control-group
				= ff.label :price, t('models.pricelist.price.base'), :class => 'control-label'
				.controls
					= ff.text_field :price, :class => 'input-xlarge'
	= f.link_to_add :choices, :class => 'btn btn-success btn-small' do
		%i.icon-plus.icon-white
