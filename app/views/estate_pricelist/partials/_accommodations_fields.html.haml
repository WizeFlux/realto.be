%fieldset.accommodations
	:javascript
		$('#edit_pricelist_#{f.object.id} .accommodations').on('focus', '.autocomplete', function(event){
			if ($(this).autocomplete('widget').attr('id')) {
				$(this).autocomplete({
					source: #{Filling.where(:model => 'Accommodation', :field => 'title').map(&:text)}
				});
			};
		});
	
	%legend= t 'models.pricelist.accommodation.s'
	%br
	= f.fields_for :accommodations do |ff|
		.well
			= ff.link_to_remove :class => 'btn btn-danger btn-small pull-right' do
				%i.icon-minus.icon-white
			= bs_wrapper ff, :bedrooms, t('models.pricelist.accommodation.bedrooms') do
				= ff.select :bedrooms, options_for_select(1..16, ff.object.bedrooms), {}, :class => 'input-mini'
				= raw('&nbsp &nbsp &nbsp &nbsp')
				= ff.label :adults_max, t('models.pricelist.accommodation.adults_max'), :class => 'help-inline'
				= raw('&nbsp &nbsp')
				= ff.select :adults_max, options_for_select(1..32, ff.object.adults_max), {}, :class => 'input-mini'
				= raw('&nbsp &nbsp &nbsp &nbsp')
				= ff.label :childs_max, t('models.pricelist.accommodation.childs_max'), :class => 'help-inline'
				= raw('&nbsp &nbsp')
				= ff.select :childs_max, options_for_select(1..32, ff.object.childs_max), {}, :class => 'input-mini'
				= raw('&nbsp &nbsp &nbsp &nbsp')
				= ff.label :amount, t('models.pricelist.accommodation.amount'), :class => 'help-inline'
				= raw('&nbsp &nbsp')
				= ff.select :amount, options_for_select(1..32, ff.object.amount), {}, :class => 'input-mini'
			= bs_i18n_text_field ff, :title, t('models.title'), :class => 'span9 autocomplete'

	= f.link_to_add :accommodations, :class => 'btn btn-success btn-small' do
		%i.icon-plus.icon-white
