%fieldset
	- if f.object.new?
		%legend= t('views.booking.form')
	- else
		.control-group
			= f.label :status, t('models.booking.status.base'), :class => 'control-label'
			.controls
				- Booking.statuses.each do |status|
					= f.label "status_#{status.downcase}", :class => 'radio inline' do
						= f.radio_button :status, status
						= t "models.booking.status.#{status.downcase}"
					= raw('&nbsp &nbsp')
	.control-group
		= f.label :checkin, t('models.booking.checkin'), :class => 'control-label'
		.controls
			.input-prepend
				%span.add-on
					%i.icon-calendar
				= f.datepicker :checkin, :dateFormat => 'yy-mm-dd', :firstDay => 1, :minDate => Date.today, :class => 'span2'
	.control-group
		= f.label :checkout, t('models.booking.checkout'), :class => 'control-label'
		.controls
			.input-prepend
				%span.add-on
					%i.icon-calendar
				= f.datepicker :checkout, :dateFormat => 'yy-mm-dd', :firstDay => 1, :minDate => Date.today, :class => 'span2'
	
	= render 'estate_pricing/partials/pricing', :pricing => f.object.estate.pricings.create({:checkin => f.object.checkin, :checkout => f.object.checkout})
	:javascript
		$('#pricing .ajax').hide();
		$('#booking_checkin, #booking_checkout').change(function(){
			$('#pricing .ajax').show();
			$.ajax({
				data: {
					pricing: {
						checkin: $('#booking_checkin').val(),
						checkout: $('#booking_checkout').val(),
					}
				},
				type: 'GET',
				url: '#{estate_pricing_url(f.object.estate)}',
				dataType: "script"
			});
		});
	
	.control-group
		= f.label :adults, t('models.booking.adults'), :class => 'control-label'
		.controls
			= f.select :adults, options_for_select(1..f.object.estate.adults_max, f.object.adults), {}, :class => 'input-mini'
			= raw('&nbsp &nbsp &nbsp &nbsp')
			= f.label :children, t('models.booking.children'), :class => 'help-inline'
			= raw('&nbsp &nbsp')
			= f.select :children, options_for_select(0..f.object.estate.childs_max, f.object.children), {}, :class => 'input-mini'

	- if (signed_in? && f.object.new?) || (f.object.customer && !f.object.new?)
		.control-group
			= f.label :customer_id, t('models.booking.person'), :class => 'control-label'
			.controls
				= f.hidden_field :customer_id, :value => (f.object.new? ? current_person.id : f.object.customer.id)
				.input-prepend
					%span.add-on
						%i.icon-user
					%input.input-large.disabled{:disabled => :disabled, :value => (f.object.new? ? current_person.name : f.object.customer.name)}
					%span.help-inline
						- if f.object.new?
							= link_to t('views.interface.logout'), session_url(:redirect_id => this_page_redirect.id), :method => :delete
						- else
							- if f.object.customer.fb_url
								%a{:href => f.object.customer.fb_url} Open Facebook
	- else
		.control-group
			= f.label :addressing, t('models.booking.person'), :class => 'control-label'
			.controls
				= f.text_field :addressing, :class =>'input-xlarge'
				- if f.object.new?
					%a.iconed.help-inline{:href => Koala::Facebook::OAuth.new(oauth_url(this_page_redirect.id.to_s)).url_for_oauth_code(:permissions => "email"), :style => 'background-image: url(/assets/icons/facebook.png) !important;'} Facebook
		.control-group
			= f.label :email, t('models.booking.email'), :class => 'control-label'
			.controls
				= f.text_field :email, :class => 'input-xlarge'
		.control-group
			= f.label :phone, t('models.booking.phone'), :class => 'control-label'
			.controls
				= f.text_field :phone, :class => 'input-xlarge'
		.control-group
			= f.label :skype, t('models.booking.skype'), :class => 'control-label'
			.controls
				= f.text_field :skype, :class => 'input-xlarge'
	.control-group
		= f.label :message, t('models.booking.message'), :class => 'control-label'
		.controls
			= f.text_area :message, :rows => 6, :class => 'input-xlarge'