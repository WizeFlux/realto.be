= nested_form_for agency, :url => agency_url, :remote => true, :html => {:class => 'form-horizontal'} do |f|
	%fieldset
		%legend= t 'views.agency.information'
		
		= bs_i18n_text_field f, :title, t('models.title'), :class => 'span8'
		= bs_i18n_text_area f, :teaser, t('models.teaser'), :rows => 2, :class => 'span8'
		
		= bs_text_field f, :subdomain, t('models.agency.subdomain'), :class => 'span8'
		= bs_text_field f, :host, t('models.agency.host'), :class => 'span8'
		= bs_text_area f, :keywords, t('models.agency.keywords'), :class => 'span8', :rows => 2
		
		= bs_wrapper f, :operating_languages, t('models.agency.operating_languages') do
			- Agency.avaiable_languages.each do |language| 
				= label_tag language, :class => 'checkbox inline' do
					= check_box_tag 'agency[operating_languages][]', language, agency.operating_languages.include?(language), :id => language
					= language.classify
			= hidden_field_tag 'agency[operating_languages][]', nil
		
		= bs_wrapper f, :default_language, t('models.agency.default_language') do
			- agency.operating_languages.each do |language| 
				= f.label "default_language_#{language}", :class => 'radio inline' do
					= f.radio_button :default_language, language
					= language.classify
			
		.control-group
			%label.control-label= t 'models.agency.contacts'
			.controls
				= f.fields_for :contacts do |ff|
					= ff.select :kind, options_for_select(Contact.kinds, :selected => ff.object.kind), {}, :class => 'input-small'
					= raw('&nbsp')
					= ff.text_field :entry, :class => 'input-xlarge'
					= raw('&nbsp')
					= ff.link_to_remove :class => 'btn-danger btn btn-small' do
						%i.icon-minus.icon-white
					%br
					%br
				= f.link_to_add :contacts, :class => 'btn-success btn btn-small' do
					%i.icon-plus.icon-white

	.form-actions
		= f.button raw('<i class="icon-ok icon-white" /> ' + t('views.interface.save')), 'data-disable-with' => t('views.interface.saving'), :type => :submit, :class => 'btn btn-primary'
		= link_to agency_url, :class => 'btn', 'data-disable-with' => 'Canceling...', :remote => true do
			%i.icon-remove
			= t 'views.interface.cancel'